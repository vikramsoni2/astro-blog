---
import BaseLayout from '../layouts/BaseLayout.astro';

const title = 'Vikram Soni';
const description = 'Vikram Soni, Machine Learning Consultant based in Madrid, Spain.';
const permalink = Astro.site.href;
---


<BaseLayout title={title} description={description} permalink={permalink}>
  <div class="home-container">

    <!-- <div class="home-image"></div> -->

    <div class="home-copy">
      <div class="greeting">
        <span>üôè</span><h1></h1><h1 class="cursor">_</h1>
      </div>
      <p>My name is <u>Vikram Soni</u>. I am a Data science and Machine Learning practitioner. I'm passionate about machine learning, predictive modeling and artificial neural networks.</p>
      
    </div>

    <!-- <div class="hero-image-container">

      <picture>
        <source srcset="/assets/home-illustration.webp" media="(min-width: 600px)">
        <img class="hero-image" alt="Illustration of person reading a book" src="/assets/home-illustration-small.webp" width="550" height="466">
      </picture>

      
    </div> -->
  </div>
</BaseLayout>

<style lang="scss">

  .home-container {
    align-items: center;
    display: flex; 
    flex: 1;
    min-height: 100;
  }

  .home-copy {
    padding: 0 1em;
    max-width: 70%;
  }

  .home-copy h1 {
    font-size: 4rem;
    font-weight: 600;
    margin-bottom: 0em;
    line-height: 1.3;
    /* max-width: 70%; */
    font-variation-settings: "wght" 700;
    min-height: 1.3em;
    // color: var(--primary-color);
  }
  /* :root.theme-dark .home-copy h1 {
    background: radial-gradient(ellipse at center, #eff1ff 20%, #000 100%);
    background-size: 180% 180%;
    background-position: 60% center;
    background-clip: text; 
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  } */

  .home-copy p {
    font-size: 1.5em;
    font-weight:400;
  }

  .greeting {
    display: flex;
    span {
      font-size: 3.5rem;
      margin-right: 1rem;
      filter: grayscale(0.5);
    }
    .cursor {
      font-variation-settings: "wght" 400;
    }
  }

  /* :root.theme-dark .home-copy p {
    background: radial-gradient(ellipse at center, #eff1ff 20%, #000 100%);
    background-size: 200% 100%;
    background-position: right center;
    background-clip: text; 
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  } */

  .hero-image-container {
    margin: 0 1em;
    text-align: center;
  }

  .hero-image-container picture {
    display: block;
    min-height: 250px;
  }

  .caption {
    font-size: .8em;
    font-style: italic;
    text-align: left;
  }

  .hero-image {
    width: 100%;
    max-width: 550px;
    margin-bottom: 1em;
  }

  @media (max-width: 1200px) {
    p {
      font-size: 1.2em;
    }

    .hero-image {
      max-width: 400px;
    }
  }

  @media (max-width: 800px) {
    .home-container {
      flex-direction: column;
    }

    .home-copy {
      flex: 0;
      padding-bottom: 2em;
      /* text-align: center; */
    }
  }
</style>

<script>
import { gsap } from 'gsap';
import SplitType from 'split-type';
import { wrapLines } from '../js/utils';
import { TextPlugin } from "gsap/TextPlugin";

gsap.registerPlugin(TextPlugin);  

// const text = new SplitType('.home-copy h1', { types: 'lines' })

// wrapLines(text.lines, 'div', 'oh');
// gsap.killTweensOf(text.lines);
// gsap.timeline({defaults: {duration: 1.2, ease: 'expo'}})
// .set(text.lines, {
//     y: '150%',
//     rotate: 15
// })
// .to(text.lines, {
//     y: '0%',
//     rotate: 0,
//     stagger: 0.04
// });

// gsap.timeline({defaults: {duration: 4, ease: 'expo'}})
// .to('.home-copy h1', {
//   text: {
//     value: "AI and data science enthusiast, passionate about machine learning, predictive modeling and artificial neural networks."
//   }});

  // gsap.to(".home-copy h1", {
  // text: {
  //   value: "AI and data science enthusiast, passionate about machine learning, predictive modeling and artificial neural networks."
  // }, duration: 3, delay: 1, ease: "none"})

  function typeText() {
    const words = ["Hello", "Hola", "Hallo", "‡§®‡§Æ‡§∏‡•ç‡§§‡•á"]
    const greeting = document.querySelector(".home-copy h1");
    // const tl = gsap.timeline({ repeat: -1 });

    let cursor = gsap.to('.cursor', {opacity:0, ease: "power2.inOut", repeat:-1})
    let greetingTl = gsap.timeline({repeat: -1})

    words.forEach(word => {
      let tl = gsap.timeline({repeat: 1, yoyo: true, repeatDelay:2})
      tl.to(greeting, {duration: 1, text: word, ease:'easeIn'})
      greetingTl.add(tl)
    })


  }


  typeText();



</script>


